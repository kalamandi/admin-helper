exports.execute = async (ctx) => { 
    const [ , nick ] = ctx.args;

    if (
        !nick 
        || ctx.args[2] 
        || !nick.includes('_')
    ) {
        return ctx.reply(`‚ùóÔ∏è –£–∫–∞–∂–∏—Ç–µ –Ω–∏–∫ –≤ —Ñ–æ—Ä–º–∞—Ç–µ Nick_Name\n\n–ü—Ä–∏–º–µ—Ä: /mynick Nikolay_Kalamandi`);
    };
    
    if (nick == ctx.user?.nick) return ctx.reply(`–£ –í–∞—Å —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —ç—Ç–æ—Ç –Ω–∏–∫...`); 

    const isNickBusy = await ctx.db.User.findOne({ where: { nick, server: ctx.peer.id } });
    if (isNickBusy) {
        return ctx.reply(`‚ùóÔ∏è [id${isNickBusy.vk_id}|–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å] —Å —Ç–∞–∫–∏–º –Ω–∏–∫–æ–º —É–∂–µ –µ—Å—Ç—å –≤ –±–µ—Å–µ–¥–µ`); 
    }

    if (!ctx.user) { 
        await ctx.db.User.create({
            vk_id: ctx.senderId,
            nick,
            server: ctx.peer.id
        });

        return ctx.reply(`‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏–ª–∏ —Å–µ–±–µ –Ω–∏–∫: ${nick}`);
    }
    
    await ctx.reply(`üîÑ –í—ã —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–∏–ª–∏ —Å–µ–±–µ –Ω–∏–∫: ${ctx.user.nick} ‚Üí ${nick}`);

    ctx.user.nick = nick;
    await ctx.user.save();
    
    return;
};


exports.info = { 
    command: '/mynick',
    type: 'text',
    description: '—É—Å—Ç–∞–Ω–æ–≤–∫–∞/–∏–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–∏–∫–∞'
};